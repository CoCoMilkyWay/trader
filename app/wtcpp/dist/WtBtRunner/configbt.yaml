replayer:
    basefiles:
        commodity: ../common/commodities.json
        contract: ../common/contracts.json
        holiday: ../common/holidays.json
        hot: ../common/hots.json
        session: ../common/sessions.json
    fees: ../common/fees.json
    cta_stime: 201909010900         # CTA回测demo开始时间，测试的时候去掉前缀cta_
    cta_etime: 201912011500         # CTA回测demo结束时间，测试的时候去掉前缀cta_
    hft_stime: 202101040900         # HFT回测demo开始时间，测试的时候去掉前缀hft_
    hft_etime: 202101061500         # HFT回测demo结束时间，测试的时候去掉前缀hft_
    stime: 202101040900             # UFT回测demo开始时间，测试的时候去掉前缀uft_
    etime: 202101061500             # UFT回测demo结束时间，测试的时候去掉前缀uft_
    mode: csv
    path: ../storage/
    tick: true                     # 是否开启tick回测，HFT回测时必须开启
env:
    mocker: exec                     # 回测引擎，cta/hft/sel/uft/exec
    slippage: 1

# CTA策略配置，当mocker为cta时会读取该配置项
cta:
    module: WtCtaStraFact.dll       # 模块名，linux下为xxxx.so
    strategy:                       # 策略信息
        id: dt_if                   # 策略ID，自定义的
        name: DualThrust            # 策略名，要和factory中的匹配
        params:                     # 策略初始化参数，这个根据策略的需要提供
            code: CFFEX.IF.HOT
            count: 50
            days: 30
            k1: 0.6
            k2: 0.6
            period: m5
            stock: false

# HFT策略配置，当mocker为hft时会读取该配置项
hft:
    module: WtHftStraFact.dll       # 模块名，linux下为xxxx.so
    strategy:                       # 策略信息
        id: hft_if                  # 策略ID，自定义的
        name: SimpleHft             # 策略名，要和factory中的匹配
        params:                     # 策略初始化参数，这个根据策略的需要提供
            code: CFFEX.IF.HOT
            second: 5
            freq: 10
            offset: 0
            stock: false

# UFT策略配置，当mocker为uft时会读取该配置项
uft:
    module: WtUftStraFact.dll       # 模块名，linux下为xxxx.so
    strategy:                       # 策略信息
        id: uft_if                  # 策略ID，自定义的
        name: SimpleUft             # 策略名，要和factory中的匹配
        params:                     # 策略初始化参数，这个根据策略的需要提供
            code: CFFEX.IF.HOT
            second: 5
            freq: 10
            offset: 0
            lots: 1

# 配置，当mocker为uft时会读取该配置项
exec:
    module: WtExeFact.dll           # 模块名，linux下为xxxx.so
    code: CFFEX.IF.HOT              # 驱动合约代码
    period: m5                      # 驱动周期
    volunit: 50                     # 周期单位数量
    volmode: 0                      # 数量模式，0-每个周期设定的目标头寸，正负反复，-1-一直卖，即目标头寸一直减少，1-一直卖
    executer:
      name: WtMinImpactExeUnit      # 执行单元名称
      id: exec
      params:
        offset: 0
        expire: 5
        pricemode: 1
        span: 500
        byrate: false
        lots: 1
        rate: 0.1
    
